version: '3.8'

services:
  app:
    # image: cosmtrek/air
    depends_on:
      - mongodb
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        # [Choice] Go version 1, 1.18, 1.17
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: ${GO_VERSION:-1.18}-bullseye
        # Options
        NODE_VERSION: "${NODE_VERSION:-lts/*}"
    env_file:
      # Ensure that the variables in .env match the same variables in devcontainer.json
      - .env

    # Security Opt and cap_add allow for C++ based debuggers to work. 
    # See `runArgs`: https://github.com/Microsoft/vscode-docs/blob/main/docs/remote/devcontainerjson-reference.md
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE

    volumes:
      - .:/workspace:cached
      
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    networks:
      - menggolang-network

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db
    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)
  
  db:
    image: mongo
    container_name: "${DB_HOST:-db}"
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=menggolang
    volumes:
      - "./mongodata:/data/db"
      - "./init-mongo.js:/docker-entrypoint-initdb.d/init.mongo.js:ro"
    networks:
      - menggolang-network

# Docker Networks
networks:
  menggolang-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
